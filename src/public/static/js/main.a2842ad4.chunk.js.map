{"version":3,"sources":["api/index.ts","contexts/global.tsx","pages/Dash/components/Channel/index.tsx","pages/Dash/index.tsx","pages/Login/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","process","REACT_APP_DEV_HOST","useClientId","createPersistedState","globalContext","React","createContext","GlobalContextProvider","children","clientId","setClientId","useState","isInitialized","setIsInitialized","login","a","defaults","headers","common","get","then","catch","data","enabled","user_login","priority","delete","post","useEffect","config","isAuthenticated","Provider","value","logout","listChannels","setEnabled","setPriority","deleteChannel","addChannel","Channel","handleEnabledTimeout","handlePriorityTimeout","handleDeleteChannelTimeout","user_name","event","clearTimeout","setTimeout","Boolean","target","checked","Number","htmlFor","name","type","onChange","defaultChecked","defaultValue","onClick","Dash","navigate","useNavigate","channels","setChannels","newChannelName","setNewChannelName","useContext","console","log","handleDeleteChannel","disabled","length","map","channel","user_id","Login","secret","setSecret","onSubmit","preventDefault","AppRoutes","path","element","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2842ad4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_DEV_HOST || './'\r\n})\r\n\r\n\r\n\r\nexport default api","import { AxiosResponse } from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport createPersistedState from 'use-persisted-state'\r\nimport api from \"../api\";\r\n\r\nconst useClientId = createPersistedState('secret')\r\n\r\nexport interface globalContextData {\r\n    login: (clientId: string) => void\r\n    logout: () => void\r\n    listChannels(): Promise<IChannel[]>\r\n    setEnabled: (enabled: boolean, user_login: string) => Promise<any>\r\n    setPriority: (priority: number, user_login: string) => Promise<any>\r\n    deleteChannel(user_login: string): Promise<IChannel>\r\n    addChannel(user_login: string): Promise<IChannel>\r\n    isAuthenticated: boolean\r\n    clientId: string | undefined\r\n    isInitialized: boolean\r\n}\r\n\r\n\r\nexport interface IChannel {\r\n    user_id: string\r\n    user_login: string\r\n    user_name: string\r\n    priority: number\r\n    enabled: boolean\r\n}\r\n\r\nexport const globalContext = React.createContext({} as globalContextData)\r\n\r\nconst GlobalContextProvider: React.FC = ({ children }) => {\r\n    const [clientId, setClientId] = useClientId<string>('')\r\n    const [isInitialized, setIsInitialized] = useState(false)\r\n\r\n    useEffect(() => {\r\n        async function config() {\r\n            await login(clientId)\r\n        }\r\n        config()\r\n    }, [])\r\n\r\n    async function login(clientId: string) {\r\n        api.defaults.headers.common['client_id'] = clientId\r\n\r\n        await api.get('/api').then(() => {\r\n            setClientId(clientId)\r\n            setIsInitialized(true)\r\n        }).catch(() => {\r\n            setClientId('')\r\n            setIsInitialized(true)\r\n        })\r\n    }\r\n\r\n    async function listChannels() {\r\n        const { data }: { data: IChannel[] } = await api.get('/api/channel')\r\n\r\n        return data\r\n    }\r\n\r\n    async function setEnabled(enabled: boolean, user_login: string) {\r\n        const { data } = await api.get(`/api/channel/${user_login}/${enabled ? 'enable' : 'disable'}`)\r\n        return data\r\n    }\r\n    async function setPriority(priority: number, user_login: string) {\r\n        const { data } = await api.get(`/api/channel/${user_login}/priority/${priority}`)\r\n        return data\r\n    }\r\n\r\n    async function deleteChannel(user_login: string) {\r\n        const { data } = await api.delete<any, AxiosResponse<IChannel, any>, any>(`/api/channel/${user_login}`)\r\n        return data\r\n    }\r\n\r\n    async function addChannel(user_login: string) {\r\n        const { data } = await api.post<any, AxiosResponse<IChannel, any>, any>(`/api/channel/${user_login}`)\r\n        return data\r\n    }\r\n\r\n    function logout() {\r\n        delete api.defaults.headers.common['client_id']\r\n        setClientId('')\r\n    }\r\n\r\n\r\n    const isAuthenticated = clientId !== ''\r\n    return <globalContext.Provider value={{\r\n        login,\r\n        logout,\r\n        listChannels,\r\n        setEnabled,\r\n        setPriority,\r\n        deleteChannel,\r\n        addChannel,\r\n        isInitialized,\r\n        isAuthenticated,\r\n        clientId\r\n    }}>\r\n        {children}\r\n    </globalContext.Provider>\r\n}\r\n\r\nexport default GlobalContextProvider","import { IChannel } from '../../../../contexts/global'\r\n\r\ndeclare interface IChannelComponent extends IChannel {\r\n    setEnabled: (enabled: boolean, user_login: string) => Promise<any>\r\n    setPriority: (priority: number, user_login: string) => Promise<any>\r\n    deleteChannel: (user_login: string) => Promise<any>\r\n}\r\n\r\nconst Channel: React.FC<IChannelComponent> = ({ user_name, user_login, enabled, priority, setEnabled, setPriority, deleteChannel }) => {\r\n\r\n    var handleEnabledTimeout: NodeJS.Timeout\r\n    async function handleSetEnabled(event: React.ChangeEvent<HTMLInputElement>) {\r\n        clearTimeout(handleEnabledTimeout)\r\n        handleEnabledTimeout = setTimeout(() => {\r\n            setEnabled(Boolean(event.target.checked), user_login)\r\n        }, 2000)\r\n    }\r\n\r\n    var handlePriorityTimeout: NodeJS.Timeout\r\n    async function handleSetPriority(event: React.ChangeEvent<HTMLInputElement>) {\r\n        clearTimeout(handlePriorityTimeout)\r\n        handlePriorityTimeout = setTimeout(() => {\r\n            setPriority(Number(event.target.value), user_login)\r\n        }, 2000)\r\n    }\r\n\r\n    var handleDeleteChannelTimeout: NodeJS.Timeout\r\n    async function handleDeleteChannel(event: React.MouseEvent<HTMLButtonElement>) {\r\n        clearTimeout(handleDeleteChannelTimeout)\r\n        handleDeleteChannelTimeout = setTimeout(() => {\r\n            deleteChannel(user_login)\r\n        }, 2000)\r\n    }\r\n\r\n\r\n    return <div>\r\n        <label htmlFor='enabled'>Enabled</label>\r\n        <input name='enabled' type='checkbox' onChange={handleSetEnabled} defaultChecked={enabled} />\r\n        <input name='priority' type='number' onChange={handleSetPriority} defaultValue={priority} />\r\n        <div>{user_name}</div>\r\n        <button type='button' onClick={handleDeleteChannel}>Delete</button>\r\n    </div>\r\n}\r\n\r\nexport default Channel","import { useContext, useEffect, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { IChannel, globalContext } from \"../../contexts/global\"\r\nimport Channel from \"./components/Channel\"\r\n\r\nconst Dash: React.FC = () => {\r\n    const navigate = useNavigate()\r\n    const [channels, setChannels] = useState<IChannel[]>([])\r\n    const [newChannelName, setNewChannelName] = useState('')\r\n\r\n    const {\r\n        logout,\r\n        isAuthenticated,\r\n        isInitialized,\r\n        listChannels,\r\n        setEnabled,\r\n        setPriority,\r\n        deleteChannel,\r\n        addChannel\r\n    } = useContext(globalContext)\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isInitialized) return\r\n\r\n        if (!isAuthenticated) {\r\n            navigate('/')\r\n        }\r\n        listChannels().then((data) => {\r\n            setChannels([...data])\r\n        })\r\n    }, [isAuthenticated, isInitialized, navigate])\r\n\r\n    async function handleAddNewChannel() {\r\n        const data = await addChannel(newChannelName)\r\n        console.log(data, 'created')\r\n        setChannels([data, ...channels])\r\n    }\r\n\r\n    async function handleDeleteChannel(user_login: string) {\r\n        const data = await deleteChannel(user_login)\r\n        listChannels().then((data) => {\r\n            setChannels([...data])\r\n        })\r\n        return data\r\n    }\r\n\r\n    return <div>is logged<button onClick={logout}>sair</button>\r\n        <div>\r\n            <div><label htmlFor='channel_name'>New</label><input onChange={({ target }) => setNewChannelName(target.value)} type=\"text\" name='channel_name' /><button onClick={handleAddNewChannel} type='button' disabled={newChannelName.length < 4}>Save</button></div>\r\n            {channels.map((channel) => {\r\n                return <Channel key={channel.user_id} {...channel} setEnabled={setEnabled} setPriority={setPriority} deleteChannel={handleDeleteChannel} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Dash","import { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { globalContext } from '../../contexts/global'\r\n\r\nconst Login: React.FC = () => {\r\n    const navigate = useNavigate()\r\n    const [secret, setSecret] = useState('')\r\n    const { isAuthenticated, login, clientId } = useContext(globalContext)\r\n\r\n    console.log(isAuthenticated, clientId)\r\n\r\n    function handleLogin(event: React.FormEvent) {\r\n        event.preventDefault()\r\n        login(secret)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate('/dash')\r\n        }\r\n    }, [isAuthenticated, navigate])\r\n\r\n    return <div>\r\n        <form onSubmit={handleLogin}>\r\n            <div>\r\n                <label htmlFor=\"secret\">Secret:</label>\r\n                <input type='password' onChange={({ target }) => setSecret(target.value)} name='secret' />\r\n                <button type='submit'>Entrar</button>\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Login\r\n\r\n","import { BrowserRouter, Route, Routes } from 'react-router-dom'\r\n\r\n\r\nimport Dash from './pages/Dash'\r\nimport Login from './pages/Login'\r\n\r\nexport default function AppRoutes() {\r\n\r\n    return <BrowserRouter >\r\n        <Routes>\r\n            <Route path='/' element={<Login />} />\r\n            <Route path='/dash' element={<Dash />} />\r\n        </Routes>\r\n    </BrowserRouter>\r\n}","import Routes from './routes';\nimport GlobalContextProvider from './contexts/global'\nfunction App() {\n\n\n  return (\n    <GlobalContextProvider>\n      <Routes />\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","\nimport App from './App';\n\nimport { render } from 'react-dom'\n\n\nrender(\n  <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}